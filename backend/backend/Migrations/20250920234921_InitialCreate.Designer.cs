// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250920234921_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Asistente", b =>
                {
                    b.Property<int>("asistente_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("asistente_id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("asistente_id");

                    b.ToTable("Asistentes");
                });

            modelBuilder.Entity("backend.Models.Conferencia", b =>
                {
                    b.Property<int>("conferencia_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("conferencia_id"));

                    b.Property<string>("descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ubicacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("usuario_id")
                        .HasColumnType("int");

                    b.HasKey("conferencia_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("Conferencias");
                });

            modelBuilder.Entity("backend.Models.RegistroAsistencia", b =>
                {
                    b.Property<int>("conferencia_id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("asistente_id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<bool>("asistencia")
                        .HasColumnType("bit");

                    b.HasKey("conferencia_id", "asistente_id");

                    b.HasIndex("asistente_id");

                    b.ToTable("RegistrosAsistencia");
                });

            modelBuilder.Entity("backend.Models.Usuario", b =>
                {
                    b.Property<int>("usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuario_id"));

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("passwordhash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("usuario_id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("backend.Models.Conferencia", b =>
                {
                    b.HasOne("backend.Models.Usuario", "Usuario")
                        .WithMany("Conferencias")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("backend.Models.RegistroAsistencia", b =>
                {
                    b.HasOne("backend.Models.Asistente", "Asistente")
                        .WithMany("RegistrosAsistencia")
                        .HasForeignKey("asistente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Conferencia", "Conferencia")
                        .WithMany("RegistrosAsistencia")
                        .HasForeignKey("conferencia_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asistente");

                    b.Navigation("Conferencia");
                });

            modelBuilder.Entity("backend.Models.Asistente", b =>
                {
                    b.Navigation("RegistrosAsistencia");
                });

            modelBuilder.Entity("backend.Models.Conferencia", b =>
                {
                    b.Navigation("RegistrosAsistencia");
                });

            modelBuilder.Entity("backend.Models.Usuario", b =>
                {
                    b.Navigation("Conferencias");
                });
#pragma warning restore 612, 618
        }
    }
}
